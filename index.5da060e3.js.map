{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n'use strict';\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n'use strict';\nvar $3d28d7f1aac198f5$var$currentState = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $3d28d7f1aac198f5$var$currentState;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialStateSaved = JSON.parse(JSON.stringify(initialState));\n        $3d28d7f1aac198f5$var$currentState = initialState;\n        this.score = 0;\n        this.status = 'idle';\n        this.gameStarted = false;\n        this.boardChanged = false;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"isMovePossibleHorisontally\",\n            value: function isMovePossibleHorisontally(state) {\n                return this.hasSameNeighbours(state);\n            }\n        },\n        {\n            key: \"isMovePossibleVertically\",\n            value: function isMovePossibleVertically(state) {\n                var rotated = this.rotateArrayClockwise(state);\n                return this.hasSameNeighbours(rotated);\n            }\n        },\n        {\n            key: \"hasSameNeighbours\",\n            value: function hasSameNeighbours(array) {\n                var sameValueDetected = false;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = Array.from(array)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var filtered = row.filter(function(value) {\n                            return value > 0;\n                        });\n                        for(var i = 1; i < filtered.length; i++)if (filtered[i] === filtered[i - 1]) sameValueDetected = true;\n                        if (row.some(function(value) {\n                            return value === 0;\n                        })) sameValueDetected = true;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return sameValueDetected;\n            }\n        },\n        {\n            // from chat gpt\n            key: \"rotateArrayClockwise\",\n            value: function rotateArrayClockwise(array) {\n                return array[0].map(function(_, colIndex) {\n                    return array.map(function(row) {\n                        return row[colIndex];\n                    }).reverse();\n                });\n            }\n        },\n        {\n            key: \"rotateArrayCounterClockwise\",\n            value: function rotateArrayCounterClockwise(array) {\n                return array[0].map(function(_, colIndex) {\n                    return array.map(function(row) {\n                        return row[colIndex];\n                    });\n                }).reverse();\n            }\n        },\n        {\n            key: \"addRandom\",\n            value: function addRandom() {\n                var emptyCells = [];\n                var options = [\n                    2,\n                    2,\n                    2,\n                    2,\n                    2,\n                    2,\n                    2,\n                    2,\n                    2,\n                    4\n                ];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if ($3d28d7f1aac198f5$var$currentState[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length === 0) return;\n                var randomCell = emptyCells.length === 1 ? 0 : Math.floor(Math.random() * emptyCells.length);\n                var randomOption = Math.floor(Math.random() * options.length);\n                var _emptyCells_randomCell = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[randomCell], 2), row = _emptyCells_randomCell[0], col = _emptyCells_randomCell[1];\n                $3d28d7f1aac198f5$var$currentState[row][col] = options[randomOption];\n            }\n        },\n        {\n            key: \"moveCells\",\n            value: function moveCells(direction) {\n                var result = [];\n                var state = direction === 'up' ? this.rotateArrayCounterClockwise($3d28d7f1aac198f5$var$currentState) : direction === 'down' ? this.rotateArrayClockwise($3d28d7f1aac198f5$var$currentState) : (0, $227c6742e0ff6f82$export$71511d61b312f219)($3d28d7f1aac198f5$var$currentState);\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var rowCopy = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).filter(function(value) {\n                            return value > 0;\n                        });\n                        if (direction === 'left') {\n                            var rowResult = this.mergeRowLeft(rowCopy);\n                            result.push(rowResult);\n                        }\n                        if (direction === 'right') {\n                            var rowResult1 = this.mergeRowLeft(rowCopy.reverse());\n                            result.push(rowResult1.reverse());\n                        }\n                        if (direction === 'up') {\n                            var rowResult2 = this.mergeRowLeft(rowCopy);\n                            result.push(rowResult2);\n                        }\n                        if (direction === 'down') {\n                            var rowResult3 = this.mergeRowLeft(rowCopy);\n                            result.push(rowResult3);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var finalResult = direction === 'up' ? this.rotateArrayClockwise(result) : direction === 'down' ? this.rotateArrayCounterClockwise(result) : result;\n                this.boardChanged = JSON.stringify($3d28d7f1aac198f5$var$currentState) !== JSON.stringify(finalResult);\n                $3d28d7f1aac198f5$var$currentState = finalResult;\n                return finalResult;\n            }\n        },\n        {\n            key: \"mergeRowLeft\",\n            value: function mergeRowLeft(row) {\n                var rowResult = [\n                    0,\n                    0,\n                    0,\n                    0\n                ];\n                var count = 0;\n                while(count < row.length){\n                    if (row[count] === row[count + 1]) {\n                        rowResult[count] = row[count] + row[count + 1];\n                        this.score += rowResult[count];\n                        row.splice(count, 1);\n                        row.push(0);\n                    } else rowResult[count] = row[count];\n                    count += 1;\n                }\n                rowResult.length = 4;\n                return rowResult;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.gameStarted) {\n                    this.moveCells('left');\n                    if (this.boardChanged) this.addRandom();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.gameStarted) {\n                    this.moveCells('right');\n                    if (this.boardChanged) this.addRandom();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.gameStarted) {\n                    this.moveCells('up');\n                    if (this.boardChanged) this.addRandom();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.gameStarted) {\n                    this.moveCells('down');\n                    if (this.boardChanged) this.addRandom();\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return $3d28d7f1aac198f5$var$currentState;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                if ($3d28d7f1aac198f5$var$currentState.flat().some(function(value) {\n                    return value === 2048;\n                })) return 'win';\n                if (!this.isMovePossibleHorisontally($3d28d7f1aac198f5$var$currentState) && !this.isMovePossibleVertically($3d28d7f1aac198f5$var$currentState)) return 'lose';\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.gameStarted = true;\n                this.addRandom();\n                this.addRandom();\n                this.status = 'playing';\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                if (!this.initialStateSaved.flat().every(function(value) {\n                    return value === 0;\n                })) $3d28d7f1aac198f5$var$currentState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.initialStateSaved);\n                else {\n                    $3d28d7f1aac198f5$var$currentState = [\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ],\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ],\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ],\n                        [\n                            0,\n                            0,\n                            0,\n                            0\n                        ]\n                    ];\n                    this.addRandom();\n                    this.addRandom();\n                }\n                this.gameStarted = true;\n                this.score = 0;\n                this.status = 'idle';\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n// const game = new Game();\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector('.start');\nvar $197cd56b15c33885$var$scoreScreen = document.querySelector('.game-score');\nvar $197cd56b15c33885$var$loseMessage = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$winMessage = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$startMessage = document.querySelector('.message.message-start');\n$197cd56b15c33885$var$startButton.addEventListener('click', function() {\n    if (!$197cd56b15c33885$var$game.gameStarted) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$drawCells();\n        $197cd56b15c33885$var$startMessage.hidden = true;\n        $197cd56b15c33885$var$startButton.textContent = 'restart';\n        $197cd56b15c33885$var$startButton.classList.remove('start');\n        $197cd56b15c33885$var$startButton.classList.add('restart');\n        $197cd56b15c33885$var$loseMessage.style.display = 'none';\n        $197cd56b15c33885$var$winMessage.style.display = 'none';\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$scoreScreen.textContent = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$loseMessage.style.display = 'none';\n        $197cd56b15c33885$var$winMessage.style.display = 'none';\n        $197cd56b15c33885$var$drawCells();\n    }\n});\ndocument.addEventListener('keydown', function(e) {\n    if ($197cd56b15c33885$var$game.gameStarted === false) {\n        e.preventDefault();\n        return;\n    }\n    if (e.key === 'ArrowLeft') {\n        $197cd56b15c33885$var$game.moveLeft();\n        $197cd56b15c33885$var$drawCells();\n    }\n    if (e.key === 'ArrowRight') {\n        $197cd56b15c33885$var$game.moveRight();\n        $197cd56b15c33885$var$drawCells();\n    }\n    if (e.key === 'ArrowUp') {\n        $197cd56b15c33885$var$game.moveUp();\n        $197cd56b15c33885$var$drawCells();\n    }\n    if (e.key === 'ArrowDown') {\n        $197cd56b15c33885$var$game.moveDown();\n        $197cd56b15c33885$var$drawCells();\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === 'win') {\n        e.preventDefault();\n        $197cd56b15c33885$var$winMessage.style.display = 'block';\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle') e.preventDefault();\n    if ($197cd56b15c33885$var$game.getStatus() === 'lose') {\n        e.preventDefault();\n        $197cd56b15c33885$var$loseMessage.style.display = 'block';\n    }\n    $197cd56b15c33885$var$scoreScreen.textContent = $197cd56b15c33885$var$game.getScore();\n});\nfunction $197cd56b15c33885$var$drawCells() {\n    var table = document.querySelector('.game-field tbody');\n    var rows = table.getElementsByClassName('field-row');\n    Array.from(rows).forEach(function(row, rowIndex) {\n        var cells = row.getElementsByClassName('field-cell');\n        Array.from(cells).forEach(function(cell) {\n            cell.textContent = '';\n        });\n        var currentState = $197cd56b15c33885$var$game.getState();\n        Array.from(cells).forEach(function(cell, cellIndex) {\n            if (currentState[rowIndex][cellIndex] !== 0) {\n                cell.textContent = currentState[rowIndex][cellIndex];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = cell.classList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var classItem = _step.value;\n                        if (classItem !== 'field-cell') cell.classList.remove(classItem);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                cell.classList.add(\"field-cell--\".concat(currentState[rowIndex][cellIndex]));\n            } else {\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = cell.classList[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var classItem1 = _step1.value;\n                        if (classItem1 !== 'field-cell') cell.classList.remove(classItem1);\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n            }\n        });\n    });\n}\n\n})();\n//# sourceMappingURL=index.5da060e3.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n// const game = new Game();\n\nconst game = new Game();\n\nconst startButton = document.querySelector('.start');\nconst scoreScreen = document.querySelector('.game-score');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message.message-start');\n\nstartButton.addEventListener('click', () => {\n  if (!game.gameStarted) {\n    game.start();\n    drawCells();\n    startMessage.hidden = true;\n    startButton.textContent = 'restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    loseMessage.style.display = 'none';\n    winMessage.style.display = 'none';\n  } else {\n    game.restart();\n    scoreScreen.textContent = game.getScore();\n    loseMessage.style.display = 'none';\n    winMessage.style.display = 'none';\n    drawCells();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.gameStarted === false) {\n    e.preventDefault();\n\n    return;\n  }\n\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n    drawCells();\n  }\n\n  if (e.key === 'ArrowRight') {\n    game.moveRight();\n    drawCells();\n  }\n\n  if (e.key === 'ArrowUp') {\n    game.moveUp();\n    drawCells();\n  }\n\n  if (e.key === 'ArrowDown') {\n    game.moveDown();\n    drawCells();\n  }\n\n  if (game.getStatus() === 'win') {\n    e.preventDefault();\n    winMessage.style.display = 'block';\n  }\n\n  if (game.getStatus() === 'idle') {\n    e.preventDefault();\n  }\n\n  if (game.getStatus() === 'lose') {\n    e.preventDefault();\n    loseMessage.style.display = 'block';\n  }\n\n  scoreScreen.textContent = game.getScore();\n});\n\nfunction drawCells() {\n  const table = document.querySelector('.game-field tbody');\n  const rows = table.getElementsByClassName('field-row');\n\n  Array.from(rows).forEach((row, rowIndex) => {\n    const cells = row.getElementsByClassName('field-cell');\n\n    Array.from(cells).forEach((cell) => {\n      cell.textContent = '';\n    });\n\n    const currentState = game.getState();\n\n    Array.from(cells).forEach((cell, cellIndex) => {\n      if (currentState[rowIndex][cellIndex] !== 0) {\n        cell.textContent = currentState[rowIndex][cellIndex];\n\n        for (const classItem of cell.classList) {\n          if (classItem !== 'field-cell') {\n            cell.classList.remove(classItem);\n          }\n        }\n\n        cell.classList.add(`field-cell--${currentState[rowIndex][cellIndex]}`);\n      } else {\n        for (const classItem of cell.classList) {\n          if (classItem !== 'field-cell') {\n            cell.classList.remove(classItem);\n          }\n        }\n      }\n    });\n  });\n}\n","'use strict';\n\nlet currentState = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  constructor(initialState = currentState) {\n    this.initialStateSaved = JSON.parse(JSON.stringify(initialState));\n    currentState = initialState;\n    this.score = 0;\n    this.status = 'idle';\n    this.gameStarted = false;\n    this.boardChanged = false;\n  }\n\n  isMovePossibleHorisontally(state) {\n    return this.hasSameNeighbours(state);\n  }\n\n  isMovePossibleVertically(state) {\n    const rotated = this.rotateArrayClockwise(state);\n\n    return this.hasSameNeighbours(rotated);\n  }\n\n  hasSameNeighbours(array) {\n    let sameValueDetected = false;\n\n    for (const row of Array.from(array)) {\n      const filtered = row.filter((value) => value > 0);\n\n      for (let i = 1; i < filtered.length; i++) {\n        if (filtered[i] === filtered[i - 1]) {\n          sameValueDetected = true;\n        }\n      }\n\n      if (row.some((value) => value === 0)) {\n        sameValueDetected = true;\n      }\n    }\n\n    return sameValueDetected;\n  }\n\n  // from chat gpt\n  rotateArrayClockwise(array) {\n    return array[0].map(\n      (_, colIndex) => array.map((row) => row[colIndex]).reverse(),\n      // eslint-disable-next-line function-paren-newline\n    );\n  }\n\n  rotateArrayCounterClockwise(array) {\n    return array[0]\n      .map((_, colIndex) => array.map((row) => row[colIndex]))\n      .reverse();\n  }\n\n  addRandom() {\n    const emptyCells = [];\n    const options = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (currentState[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomCell =\n      emptyCells.length === 1\n        ? 0\n        : Math.floor(Math.random() * emptyCells.length);\n    const randomOption = Math.floor(Math.random() * options.length);\n\n    const [row, col] = emptyCells[randomCell];\n\n    currentState[row][col] = options[randomOption];\n  }\n\n  moveCells(direction) {\n    const result = [];\n\n    const state =\n      direction === 'up'\n        ? this.rotateArrayCounterClockwise(currentState)\n        : direction === 'down'\n          ? this.rotateArrayClockwise(currentState)\n          : [...currentState];\n\n    for (const row of state) {\n      const rowCopy = [...row].filter((value) => value > 0);\n\n      if (direction === 'left') {\n        const rowResult = this.mergeRowLeft(rowCopy);\n\n        result.push(rowResult);\n      }\n\n      if (direction === 'right') {\n        const rowResult = this.mergeRowLeft(rowCopy.reverse());\n\n        result.push(rowResult.reverse());\n      }\n\n      if (direction === 'up') {\n        const rowResult = this.mergeRowLeft(rowCopy);\n\n        result.push(rowResult);\n      }\n\n      if (direction === 'down') {\n        const rowResult = this.mergeRowLeft(rowCopy);\n\n        result.push(rowResult);\n      }\n    }\n\n    const finalResult =\n      direction === 'up'\n        ? this.rotateArrayClockwise(result)\n        : direction === 'down'\n          ? this.rotateArrayCounterClockwise(result)\n          : result;\n\n    this.boardChanged =\n      JSON.stringify(currentState) !== JSON.stringify(finalResult);\n\n    currentState = finalResult;\n\n    return finalResult;\n  }\n\n  mergeRowLeft(row) {\n    const rowResult = [0, 0, 0, 0];\n    let count = 0;\n\n    while (count < row.length) {\n      if (row[count] === row[count + 1]) {\n        rowResult[count] = row[count] + row[count + 1];\n        this.score += rowResult[count];\n        row.splice(count, 1);\n        row.push(0);\n      } else {\n        rowResult[count] = row[count];\n      }\n      count += 1;\n    }\n\n    rowResult.length = 4;\n\n    return rowResult;\n  }\n\n  moveLeft() {\n    if (this.gameStarted) {\n      this.moveCells('left');\n\n      if (this.boardChanged) {\n        this.addRandom();\n      }\n    }\n  }\n\n  moveRight() {\n    if (this.gameStarted) {\n      this.moveCells('right');\n\n      if (this.boardChanged) {\n        this.addRandom();\n      }\n    }\n  }\n\n  moveUp() {\n    if (this.gameStarted) {\n      this.moveCells('up');\n\n      if (this.boardChanged) {\n        this.addRandom();\n      }\n    }\n  }\n\n  moveDown() {\n    if (this.gameStarted) {\n      this.moveCells('down');\n\n      if (this.boardChanged) {\n        this.addRandom();\n      }\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return currentState;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    if (currentState.flat().some((value) => value === 2048)) {\n      return 'win';\n    }\n\n    if (\n      !this.isMovePossibleHorisontally(currentState) &&\n      !this.isMovePossibleVertically(currentState)\n    ) {\n      return 'lose';\n    }\n\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.gameStarted = true;\n    this.addRandom();\n    this.addRandom();\n    this.status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    if (!this.initialStateSaved.flat().every((value) => value === 0)) {\n      currentState = [...this.initialStateSaved];\n    } else {\n      currentState = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n\n      this.addRandom();\n      this.addRandom();\n    }\n\n    this.gameStarted = true;\n    this.score = 0;\n    this.status = 'idle';\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$3d28d7f1aac198f5$var$currentState","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","initialStateSaved","JSON","parse","stringify","score","status","gameStarted","boardChanged","key","value","state","hasSameNeighbours","rotated","rotateArrayClockwise","array","sameValueDetected","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","row","filtered","filter","some","err","return","map","_","colIndex","reverse","emptyCells","options","j","push","randomCell","Math","floor","random","randomOption","_emptyCells_randomCell","_s","_e","_i","_arr","_n","_d","col","direction","result","rotateArrayCounterClockwise","rowCopy","rowResult","mergeRowLeft","rowResult1","rowResult2","rowResult3","finalResult","count","splice","moveCells","addRandom","flat","isMovePossibleHorisontally","isMovePossibleVertically","every","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$scoreScreen","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$drawCells","table","getElementsByClassName","forEach","rowIndex","cells","cell","textContent","currentState","getState","cellIndex","classList","classItem","remove","add","concat","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","classItem1","addEventListener","restart","getScore","style","display","start","hidden","e","preventDefault","moveLeft","moveRight","moveUp","moveDown","getStatus"],"version":3,"file":"index.5da060e3.js.map"}